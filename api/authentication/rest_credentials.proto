syntax = "proto3";
package rest_credentials;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Swagger Sample definition.
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Portia Services";
		version: "1.0.0";
		contact: {
			name: "KEYS for my new services";
			url: "https://portunus.com";
			email: "flavius.lacatusu@gmail.com";
        };
    };
    base_path: "/portia";
    schemes: [HTTP,HTTPS];
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
		security: {
			key: "TLS Authentication";
			value: {
				type: TYPE_BASIC;
			}
        }
    }
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
	}
    responses: {
        key: "500";
        value: {
            description: "Unexpected error";
                schema: {
                    json_schema: {
                        type: STRING;
                }
            }
        }
    }
};

//Credentials values generated for a rest application.
message RestAppDefinition {
    string project_id = 1;
    string client_id = 2;
    string client_secret = 3;
    string auth_uri = 4;
    repeated string redirect_uris = 5;
}

//Create a response for the rest application with credentials data.
message CreateRestResponse {
    RestAppDefinition rest = 1;
}

// Data needed to create credentials.
message CreateRestRequest{
    string project_id = 1;
    string redirect_uris = 2;
}

// Service to manage list of rest backend
service RestAuthCredentials {
    // Create new Credentials for rest backend
    rpc Create(CreateRestRequest) returns (CreateRestResponse){
        option (google.api.http) = {
            post: "/portia/rest/credentials/generate"
            body: "*"
        };
    }
}
